!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ArtificialNeuralNetwork	../nn/neural_network.py	/^class ArtificialNeuralNetwork:$/;"	kind:class	line:47
DERIVATIVE	../nn/transfer.py	/^DERIVATIVE = "derivative"$/;"	kind:variable	line:4
Datasets	../dataset.py	/^class Datasets:$/;"	kind:class	line:13
Experiment	../experiment.py	/^class Experiment:$/;"	kind:class	line:16
FUNCTION	../nn/transfer.py	/^FUNCTION = "function"$/;"	kind:variable	line:3
KFoldCrossValidation	../util.py	/^class KFoldCrossValidation:$/;"	kind:class	line:32
MLFFNetwork	../nn/mlff.py	/^class MLFFNetwork(ArtificialNeuralNetwork):$/;"	kind:class	line:8
NetworkTrainer	../nn/trainer.py	/^class NetworkTrainer:$/;"	kind:class	line:37
Neuron	../nn/neural_network.py	/^class Neuron:$/;"	kind:class	line:6
PretrainedMLPNetwork	../nn/mlff.py	/^class PretrainedMLPNetwork(MLFFNetwork):$/;"	kind:class	line:170
PretrainedRBFNetwork	../nn/rbf.py	/^class PretrainedRBFNetwork(RBFNetwork):$/;"	kind:class	line:164
QueuedCsvWriter	../util.py	/^class QueuedCsvWriter:$/;"	kind:class	line:8
RBFNetwork	../nn/rbf.py	/^class RBFNetwork(ArtificialNeuralNetwork):$/;"	kind:class	line:72
RBFNeuron	../nn/rbf.py	/^class RBFNeuron(Neuron):$/;"	kind:class	line:29
RBFTrainer	../nn/rbf.py	/^class RBFTrainer:$/;"	kind:class	line:175
TRANSFER_FUNCTIONS	../nn/transfer.py	/^TRANSFER_FUNCTIONS = {$/;"	kind:variable	line:24
__init__	../experiment.py	/^    def __init__(self, network: ArtificialNeuralNetwork,$/;"	kind:member	line:18
__init__	../nn/mlff.py	/^    def __init__(self, network_json_str):$/;"	kind:member	line:172
__init__	../nn/mlff.py	/^    def __init__(self, num_inputs, num_hidden_layers = 1, $/;"	kind:member	line:13
__init__	../nn/neural_network.py	/^    def __init__(self):$/;"	kind:member	line:53
__init__	../nn/neural_network.py	/^    def __init__(self, num_inputs = None, transfer_function = "logistic",$/;"	kind:member	line:11
__init__	../nn/rbf.py	/^    def __init__(self, network: RBFNetwork, training_set, validation_set, learning_rate=0.1):$/;"	kind:member	line:177
__init__	../nn/rbf.py	/^    def __init__(self, network_json_str):$/;"	kind:member	line:166
__init__	../nn/rbf.py	/^    def __init__(self, num_inputs = None, range_low = None, range_high=None, neuron_json=None):$/;"	kind:member	line:31
__init__	../nn/rbf.py	/^    def __init__(self, num_inputs, i_lower_bound=-1.5, i_upper_bound=1.5, num_hidden_units = 10, learning_rate = 0.1):$/;"	kind:member	line:74
__init__	../nn/trainer.py	/^    def __init__(self, network: ArtificialNeuralNetwork, training_set, validation_set, learning_rate=0.1):$/;"	kind:member	line:39
__init__	../util.py	/^    def __init__(self, dataset, num_folds):$/;"	kind:member	line:34
__init__	../util.py	/^    def __init__(self, result_file_name, header_row, queue_size = 50):$/;"	kind:member	line:14
__init__.py	../nn/__init__.py	1;"	kind:file	line:1
activate	../nn/neural_network.py	/^    def activate(self, inputs):$/;"	kind:member	line:28
activate	../nn/rbf.py	/^    def activate(self, inputs):$/;"	kind:member	line:43
apply_weight_gradients	../nn/mlff.py	/^    def apply_weight_gradients(self, delta_weights):$/;"	kind:member	line:112
apply_weight_gradients	../nn/neural_network.py	/^    def apply_weight_gradients(self, *args):$/;"	kind:member	line:80
apply_weight_gradients	../nn/rbf.py	/^    def apply_weight_gradients(self, weight_changes):$/;"	kind:member	line:120
args	../mlff_experiment.py	/^    args = parser.parse_args()$/;"	kind:variable	line:18
args	../rbf_experiment.py	/^    args = parser.parse_args()$/;"	kind:variable	line:17
average_validation_err_increasing	../experiment.py	/^    def average_validation_err_increasing(self):$/;"	kind:member	line:107
backprop_error	../nn/mlff.py	/^    def backprop_error(self, expected_outputs):$/;"	kind:member	line:69
backprop_error	../nn/rbf.py	/^    def backprop_error(self, expected_outputs):$/;"	kind:member	line:89
backprop_hidden_layers	../nn/mlff.py	/^    def backprop_hidden_layers(self):$/;"	kind:member	line:53
backprop_output_layer	../nn/mlff.py	/^    def backprop_output_layer(self, expected_outputs):$/;"	kind:member	line:41
calculate_weight_gradients	../nn/mlff.py	/^    def calculate_weight_gradients(self, row):$/;"	kind:member	line:83
calculate_weight_gradients	../nn/rbf.py	/^    def calculate_weight_gradients(self):$/;"	kind:member	line:102
chunk_array	../util.py	/^def chunk_array(array, chunk_size):$/;"	kind:function	line:80
compute_variance	../nn/rbf.py	/^def compute_variance(clusters):$/;"	kind:function	line:17
dataset	../mlff_experiment.py	/^    dataset = Datasets.random_rosenbrock(args.num_inputs, args.num_points)$/;"	kind:variable	line:20
dataset	../rbf_experiment.py	/^    dataset = Datasets.random_rosenbrock(args.num_inputs, args.num_points)$/;"	kind:variable	line:19
dataset.py	../dataset.py	1;"	kind:file	line:1
delta	../nn/neural_network.py	/^    delta = None$/;"	kind:variable	line:8
err_not_changing	../experiment.py	/^    def err_not_changing(self, err_queue: deque):$/;"	kind:member	line:95
exit_handler	../experiment.py	/^    def exit_handler(self):$/;"	kind:member	line:127
experiment	../mlff_experiment.py	/^    experiment = Experiment(network, dataset, args.results, args.models)$/;"	kind:variable	line:22
experiment	../rbf_experiment.py	/^    experiment = Experiment(network, dataset, args.results, args.models)$/;"	kind:variable	line:21
experiment.py	../experiment.py	1;"	kind:file	line:1
flush	../util.py	/^    def flush(self):$/;"	kind:member	line:27
forward	../nn/neural_network.py	/^    def forward(self, inputs):$/;"	kind:member	line:25
forward	../nn/neural_network.py	/^    def forward(self, inputs):$/;"	kind:member	line:59
forward	../nn/rbf.py	/^    def forward(self, inputs):$/;"	kind:member	line:49
get_mean_gradients	../nn/trainer.py	/^    def get_mean_gradients(self, gradients):$/;"	kind:member	line:107
get_mean_gradients_mlff	../nn/trainer.py	/^def get_mean_gradients_mlff(dweights):$/;"	kind:function	line:9
get_training_set	../util.py	/^    def get_training_set(self, fold_index):$/;"	kind:member	line:47
get_validation_set	../util.py	/^    def get_validation_set(self, fold_index):$/;"	kind:member	line:61
input_layer	../nn/mlff.py	/^    input_layer = None$/;"	kind:variable	line:10
input_layer	../nn/neural_network.py	/^    input_layer = None$/;"	kind:variable	line:49
json	../nn/neural_network.py	/^    def json(self):$/;"	kind:member	line:40
json	../nn/neural_network.py	/^    def json(self):$/;"	kind:member	line:83
json	../nn/rbf.py	/^    def json(self):$/;"	kind:member	line:66
layers	../nn/mlff.py	/^    layers = None$/;"	kind:variable	line:11
layers	../nn/neural_network.py	/^    layers = None$/;"	kind:variable	line:50
learning_rate	../nn/neural_network.py	/^    learning_rate = 0.1$/;"	kind:variable	line:51
linear	../dataset.py	/^    def linear(num_points=1000, low=0, high=5):$/;"	kind:member	line:33
linear	../nn/transfer.py	/^def linear(value):$/;"	kind:function	line:12
linear_deriv	../nn/transfer.py	/^def linear_deriv(value):$/;"	kind:function	line:15
logistic	../nn/transfer.py	/^def logistic(value):$/;"	kind:function	line:6
logistic_deriv	../nn/transfer.py	/^def logistic_deriv(value):$/;"	kind:function	line:9
max_pairwise_distance	../nn/rbf.py	/^def max_pairwise_distance(cluster1, cluster2):$/;"	kind:function	line:9
mean_squared_error	../util.py	/^def mean_squared_error(dataset, network: ArtificialNeuralNetwork):$/;"	kind:function	line:71
mlff.py	../nn/mlff.py	1;"	kind:file	line:1
mlff_experiment.py	../mlff_experiment.py	1;"	kind:file	line:1
network	../mlff_experiment.py	/^    network = MLFFNetwork(args.num_inputs, args.num_hidden_layers, args.num_nodes_layer)$/;"	kind:variable	line:21
network	../rbf_experiment.py	/^    network = RBFNetwork(args.num_inputs, num_hidden_units=args.num_gaussian)$/;"	kind:variable	line:20
neural_network.py	../nn/neural_network.py	1;"	kind:file	line:1
on_exit	../mlff_experiment.py	/^    def on_exit(*args):$/;"	kind:function	line:24
on_exit	../rbf_experiment.py	/^    def on_exit(*args):$/;"	kind:function	line:23
output	../nn/neural_network.py	/^    output = None$/;"	kind:variable	line:9
parser	../mlff_experiment.py	/^parser = argparse.ArgumentParser()$/;"	kind:variable	line:9
parser	../rbf_experiment.py	/^parser = argparse.ArgumentParser()$/;"	kind:variable	line:9
partition	../experiment.py	/^def partition(dataset):$/;"	kind:function	line:9
random_rosenbrock	../dataset.py	/^    def random_rosenbrock(numx = 2, points = 100, lower_bound = -2, upper_bound = 2,$/;"	kind:member	line:45
rbf.py	../nn/rbf.py	1;"	kind:file	line:1
rbf_experiment.py	../rbf_experiment.py	1;"	kind:file	line:1
rosenbrock	../dataset.py	/^def rosenbrock(*x):$/;"	kind:function	line:4
run	../experiment.py	/^    def run(self):$/;"	kind:member	line:62
save_model	../experiment.py	/^    def save_model(self, epoch):$/;"	kind:member	line:77
set_learning_rate	../nn/neural_network.py	/^    def set_learning_rate(self, learning_rate):$/;"	kind:member	line:56
should_stop_training	../experiment.py	/^    def should_stop_training(self):$/;"	kind:member	line:82
squares	../dataset.py	/^    def squares(num_points=1000, low=0, high=1000):$/;"	kind:member	line:25
stop	../nn/trainer.py	/^    def stop(self):$/;"	kind:member	line:120
tanh	../nn/transfer.py	/^def tanh(value):$/;"	kind:function	line:18
tanh_deriv	../nn/transfer.py	/^def tanh_deriv(value):$/;"	kind:function	line:21
train	../nn/mlff.py	/^    def train(self, inputs, expected_outputs):$/;"	kind:member	line:148
train	../nn/neural_network.py	/^    def train(self, *args):$/;"	kind:member	line:74
train	../nn/rbf.py	/^    def train(self, inputs, expected_outputs):$/;"	kind:member	line:143
train_regression_batch	../nn/rbf.py	/^    def train_regression_batch(self, batch_size=None, learning_rate=0.1, num_epochs=100, start_epoch=0):$/;"	kind:member	line:199
train_regression_batch	../nn/trainer.py	/^    def train_regression_batch(self, learning_rate=0.1, max_epochs=-1, start_epoch=0, batch_size=None):$/;"	kind:member	line:67
train_regression_incremental	../nn/rbf.py	/^    def train_regression_incremental(self, learning_rate=0.1, num_epochs=100, start_epoch=0):$/;"	kind:member	line:184
train_regression_incremental	../nn/trainer.py	/^    def train_regression_incremental(self, max_epochs=-1, start_epoch=0, learning_rate = 0.1):$/;"	kind:member	line:46
train_without_update	../nn/mlff.py	/^    def train_without_update(self, inputs, expected_outputs):$/;"	kind:member	line:164
train_without_update	../nn/neural_network.py	/^    def train_without_update(self, *args):$/;"	kind:member	line:77
train_without_update	../nn/rbf.py	/^    def train_without_update(self, inputs, expected_outputs):$/;"	kind:member	line:149
trainer.py	../nn/trainer.py	1;"	kind:file	line:1
transfer	../nn/neural_network.py	/^    def transfer(self, activation):$/;"	kind:member	line:31
transfer	../nn/rbf.py	/^    def transfer(self, inputs):$/;"	kind:member	line:52
transfer.py	../nn/transfer.py	1;"	kind:file	line:1
transfer_derivative	../nn/neural_network.py	/^    def transfer_derivative(self, value):$/;"	kind:member	line:34
transfer_derivative	../nn/rbf.py	/^    def transfer_derivative(self, inputs):$/;"	kind:member	line:59
update_weights	../nn/mlff.py	/^    def update_weights(self, row):$/;"	kind:member	line:126
update_weights	../nn/rbf.py	/^    def update_weights(self):$/;"	kind:member	line:135
util.py	../util.py	1;"	kind:file	line:1
writerow	../util.py	/^    def writerow(self, row):$/;"	kind:member	line:21
xor	../dataset.py	/^    def xor():$/;"	kind:member	line:16
